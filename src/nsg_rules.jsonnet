{

    // some insanity to generate unique priority within an nsg
    local priority200 = function(seed) std.mod(std.foldr(function(acc, x) acc + x, std.map(function(x) std.codepoint(x), std.stringChars(seed)), 0), 100) + 200,

    rule_allow_ssh_inet(dstAddrPref): {
        name: "allow_ssh_in_from_inet",
        priority: 100,
        direction: "Inbound",
        access: "Allow",
        protocol: "Tcp",
        source_port_range: "*",
        destination_port_range: "22",
        source_address_prefix: "INTERNET",
        destination_address_prefix: dstAddrPref,
    },
    rule_allow_ssh(dstAddrPref, srcAddrPref): {
        name: "allow_ssh_in_from_bastion",
        priority: 110,
        direction: "Inbound",
        access: "Allow",
        protocol: "Tcp",
        source_port_range: "*",
        destination_port_range: "22",
        source_address_prefix: srcAddrPref,
        destination_address_prefix: dstAddrPref,
    },
    rule_allow_etcd_2379_inbound(dstAddrPref, srcAddrPref): {
        name: "allow_etcd_2379_from_" + std.split(srcAddrPref, "/")[0],
        priority: priority200(self.name),
        direction: "Inbound",
        access: "Allow",
        protocol: "Tcp",
        source_port_range: "*",
        destination_port_range: "2379",
        source_address_prefix: srcAddrPref,
        destination_address_prefix: dstAddrPref,
    },
    rule_allow_etcd_2380_inbound(dstAddrPref, srcAddrPref): {
        name: "allow_etcd_2380_from_" + std.split(srcAddrPref, "/")[0],
        priority: priority200(self.name),
        direction: "Inbound",
        access: "Allow",
        protocol: "Tcp",
        source_port_range: "*",
        destination_port_range: "2380",
        source_address_prefix: srcAddrPref,
        destination_address_prefix: dstAddrPref,
    },
    rule_allow_k8s_cAdvisor_inbound(srcAddrPref): {
        name: "allow_k8s_cAdvisor_from_" + std.split(srcAddrPref, "/")[0],
        priority: priority200(self.name),
        direction: "Inbound",
        access: "Allow",
        protocol: "Tcp",
        source_port_range: "*",
        destination_port_range: "4194",
        source_address_prefix: srcAddrPref,
        destination_address_prefix: "10.244.0.0/16",
    },
    rule_allow_k8s_https_inbound(srcAddrPref): {
        name: "allow_k8s_https_from_" + std.split(srcAddrPref, "/")[0],
        priority: priority200(self.name),
        direction: "Inbound",
        access: "Allow",
        protocol: "Tcp",
        source_port_range: "*",
        destination_port_range: "443",
        source_address_prefix: srcAddrPref,
        destination_address_prefix: "10.244.0.0/16",
    },
    rule_allow_k8s_http_inbound(srcAddrPref): {
        name: "allow_k8s_http_from_" + std.split(srcAddrPref, "/")[0],
        priority: priority200(self.name),
        direction: "Inbound",
        access: "Allow",
        protocol: "Tcp",
        source_port_range: "*",
        destination_port_range: "80",
        source_address_prefix: srcAddrPref,
        destination_address_prefix: "10.244.0.0/16",
    },
    rule_allow_k8s_http_8080_inbound(srcAddrPref): {
        name: "allow_k8s_http_8080_from_" + std.split(srcAddrPref, "/")[0],
        priority: priority200(self.name),
        direction: "Inbound",
        access: "Allow",
        protocol: "Tcp",
        source_port_range: "*",
        destination_port_range: "8080",
        source_address_prefix: srcAddrPref,
        destination_address_prefix: "10.244.0.0/16",
    },
    rule_allow_k8s_http_8081_inbound(srcAddrPref): {
        name: "allow_k8s_http_8081_from_" + std.split(srcAddrPref, "/")[0],
        priority: priority200(self.name),
        direction: "Inbound",
        access: "Allow",
        protocol: "Tcp",
        source_port_range: "*",
        destination_port_range: "8081",
        source_address_prefix: srcAddrPref,
        destination_address_prefix: "10.244.0.0/16",
    },
    rule_allow_k8s_http_8082_inbound(srcAddrPref): {
        name: "allow_k8s_http_8082_from_" + std.split(srcAddrPref, "/")[0],
        priority: priority200(self.name),
        direction: "Inbound",
        access: "Allow",
        protocol: "Tcp",
        source_port_range: "*",
        destination_port_range: "8082",
        source_address_prefix: srcAddrPref,
        destination_address_prefix: "10.244.0.0/16",
    },
    rule_allow_k8s_http_8083_inbound(srcAddrPref): {
        name: "allow_k8s_http_8083_from_" + std.split(srcAddrPref, "/")[0],
        priority: priority200(self.name),
        direction: "Inbound",
        access: "Allow",
        protocol: "Tcp",
        source_port_range: "*",
        destination_port_range: "8083",
        source_address_prefix: srcAddrPref,
        destination_address_prefix: "10.244.0.0/16",
    },
    rule_allow_k8s_dns_inbound(srcAddrPref): {
        name: "allow_k8s_dns_from_" + std.split(srcAddrPref, "/")[0],
        priority: priority200(self.name),
        direction: "Inbound",
        access: "Allow",
        protocol: "Tcp",
        source_port_range: "*",
        destination_port_range: "53",
        source_address_prefix: srcAddrPref,
        destination_address_prefix: "10.244.0.0/16",
    },
    rule_allow_k8s_dashboard_inbound(srcAddrPref): {
        name: "allow_k8s_dashboard_from_" + std.split(srcAddrPref, "/")[0],
        priority: priority200(self.name),
        direction: "Inbound",
        access: "Allow",
        protocol: "Tcp",
        source_port_range: "*",
        destination_port_range: "9090",
        source_address_prefix: srcAddrPref,
        destination_address_prefix: "10.244.0.0/16",
    },
    rule_allow_k8s_kubelet_10250_inbound(srcAddrPref): {
        name: "allow_k8s_kubelet_10250_inbound",
        priority: priority200(self.name),
        direction: "Inbound",
        access: "Allow",
        protocol: "Tcp",
        source_port_range: "*",
        destination_port_range: "10250",
        source_address_prefix: srcAddrPref,
        destination_address_prefix: "10.244.0.0/16",
    },
    rule_allow_k8s_kubelet_10255_inbound(srcAddrPref): {
        name: "allow_k8s_kubelet_10255_from_" + std.split(srcAddrPref, "/")[0],
        priority: priority200(self.name),
        direction: "Inbound",
        access: "Allow",
        protocol: "Tcp",
        source_port_range: "*",
        destination_port_range: "10255",
        source_address_prefix: srcAddrPref,
        destination_address_prefix: "10.244.0.0/16",
    },
    rule_allow_k8s_kubedns_inbound(srcAddrPref): {
        name: "allow_k8s_kubedns_from_" + std.split(srcAddrPref, "/")[0],
        priority: priority200(self.name),
        direction: "Inbound",
        access: "Allow",
        protocol: "Tcp",
        source_port_range: "*",
        destination_port_range: "10053",
        source_address_prefix: srcAddrPref,
        destination_address_prefix: "10.244.0.0/16",
    },
    rule_allow_cassandra_inbound(dstAddrPref, srcAddrPref): {
        name: "allow_cassandra_from_" + std.split(srcAddrPref, "/")[0],
        priority: priority200(self.name),
        direction: "Inbound",
        access: "Allow",
        protocol: "Tcp",
        source_port_range: "*",
        destination_port_range: "9042",
        source_address_prefix: srcAddrPref,
        destination_address_prefix: dstAddrPref,
    },
    rule_allow_https_inbound(dstAddrPref, srcAddrPref): {
        name: "allow_https_from_" + std.split(srcAddrPref, "/")[0],
        priority: priority200(self.name),
        direction: "Inbound",
        access: "Allow",
        protocol: "Tcp",
        source_port_range: "*",
        destination_port_range: "443",
        source_address_prefix: srcAddrPref,
        destination_address_prefix: dstAddrPref,
    },
    rule_deny_all: {
        name: "deny_all_inbound",
        priority: 500,
        direction: "Inbound",
        access: "Deny",
        protocol: "*",
        source_port_range: "*",
        destination_port_range: "*",
        source_address_prefix: "*",
        destination_address_prefix: "*",
    },

}
